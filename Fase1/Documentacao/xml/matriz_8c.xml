<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="matriz_8c" kind="file" language="C++">
    <compoundname>matriz.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">locale.h</includes>
    <includes refid="matriz_8h" local="yes">matriz.h</includes>
    <incdepgraph>
      <node id="7">
        <label>antena.h</label>
        <link refid="antena_8h"/>
      </node>
      <node id="1">
        <label>matriz.c</label>
        <link refid="matriz_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>matriz.h</label>
        <link refid="matriz_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>locale.h</label>
      </node>
      <node id="2">
        <label>stdio.h</label>
      </node>
      <node id="3">
        <label>stdlib.h</label>
      </node>
      <node id="4">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="matriz_8c_1a14d59b78779d5b1b5ab79aac7c3eb43a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void inserirNefasto</definition>
        <argsstring>(Node **aux, int linha, int coluna)</argsstring>
        <name>inserirNefasto</name>
        <param>
          <type><ref refid="struct_node" kindref="compound">Node</ref> **</type>
          <declname>aux</declname>
        </param>
        <param>
          <type>int</type>
          <declname>linha</declname>
        </param>
        <param>
          <type>int</type>
          <declname>coluna</declname>
        </param>
        <briefdescription>
<para>Insere uma posição nefasta na lista ligada. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aux</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o apontador da lista de efeitos nefastos </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>linha</parametername>
</parameternamelist>
<parameterdescription>
<para>Linha da célula afetada </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>coluna</parametername>
</parameternamelist>
<parameterdescription>
<para>Coluna da célula afetada </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="matriz.c" line="26" column="6" bodyfile="matriz.c" bodystart="26" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="matriz_8c_1aba3864945dc2745df349ff8d16243f54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void exibirMatriz</definition>
        <argsstring>(Antena *listaAntenas, int linhas, int colunas)</argsstring>
        <name>exibirMatriz</name>
        <param>
          <type><ref refid="struct_antena" kindref="compound">Antena</ref> *</type>
          <declname>listaAntenas</declname>
        </param>
        <param>
          <type>int</type>
          <declname>linhas</declname>
        </param>
        <param>
          <type>int</type>
          <declname>colunas</declname>
        </param>
        <briefdescription>
<para>Exibe a matriz no terminal, com as antenas e os efeitos nefastos causados por pares de antenas com a mesma frequência. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>listaAntenas</parametername>
</parameternamelist>
<parameterdescription>
<para>Lista de antenas a serem exibidas </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>linhas</parametername>
</parameternamelist>
<parameterdescription>
<para>Número de linhas da matriz </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>colunas</parametername>
</parameternamelist>
<parameterdescription>
<para>Número de colunas da matriz </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="matriz.c" line="45" column="6" bodyfile="matriz.c" bodystart="45" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="matriz_8c_1a5ea6087f0b529841e75090f478056e67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gerarEfeitosNefastos</definition>
        <argsstring>(Antena *listaAntenas, char matriz[][100], int linhas, int colunas)</argsstring>
        <name>gerarEfeitosNefastos</name>
        <param>
          <type><ref refid="struct_antena" kindref="compound">Antena</ref> *</type>
          <declname>listaAntenas</declname>
        </param>
        <param>
          <type>char</type>
          <declname>matriz</declname>
          <array>[][100]</array>
        </param>
        <param>
          <type>int</type>
          <declname>linhas</declname>
        </param>
        <param>
          <type>int</type>
          <declname>colunas</declname>
        </param>
        <briefdescription>
<para>Gera efeitos nefastos causados por pares de antenas com a mesma frequência. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>listaAntenas</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador Lista de antenas </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>matriz</parametername>
</parameternamelist>
<parameterdescription>
<para>Matriz onde serão marcados os efeitos (&quot;#&quot;) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>linhas</parametername>
</parameternamelist>
<parameterdescription>
<para>Número de linhas da matriz </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>colunas</parametername>
</parameternamelist>
<parameterdescription>
<para>Número de colunas da matriz </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="matriz.c" line="94" column="6" bodyfile="matriz.c" bodystart="94" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="matriz_8c_1ae03a71ace65214ff61d91e0338498fc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void carregarMatrizDoFicheiro</definition>
        <argsstring>(const char *nomeFicheiro, Antena **aux, int *linhas, int *colunas)</argsstring>
        <name>carregarMatrizDoFicheiro</name>
        <param>
          <type>const char *</type>
          <declname>nomeFicheiro</declname>
        </param>
        <param>
          <type><ref refid="struct_antena" kindref="compound">Antena</ref> **</type>
          <declname>aux</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>linhas</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>colunas</declname>
        </param>
        <briefdescription>
<para>Carrega uma matriz de um ficheiro, criando a lista de antenas a partir dos dados encontrados. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nomeFicheiro</parametername>
</parameternamelist>
<parameterdescription>
<para>Path do ficheiro a ser carregado </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aux</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para a lista onde as antenas serão armazenadas </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>linhas</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para armazenar o número de linhas da matriz carregada </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>colunas</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para armazenar o número de colunas da matriz carregada </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="matriz.c" line="130" column="6" bodyfile="matriz.c" bodystart="130" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="matriz_8c_1a37b39a41a7b261b151581be51bc1dd2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void listarNefastos</definition>
        <argsstring>(Node *aux)</argsstring>
        <name>listarNefastos</name>
        <param>
          <type><ref refid="struct_node" kindref="compound">Node</ref> *</type>
          <declname>aux</declname>
        </param>
        <briefdescription>
<para>Lista todas as posições afetadas por efeitos nefastos. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aux</parametername>
</parameternamelist>
<parameterdescription>
<para>Lista ligada de posições nefastas </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="matriz.c" line="159" column="6" bodyfile="matriz.c" bodystart="159" bodyend="165"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Daniel Vilaça (<ulink url="mailto:a16939@alunos.ipca.pt">a16939@alunos.ipca.pt</ulink>) </para>
</simplesect>
<simplesect kind="version"><para>1.0 </para>
</simplesect>
<simplesect kind="date"><para>2025-03-30</para>
</simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2025 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;locale.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="matriz_8h" kindref="compound">matriz.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="matriz_8c_1a14d59b78779d5b1b5ab79aac7c3eb43a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="matriz_8c_1a14d59b78779d5b1b5ab79aac7c3eb43a" kindref="member">inserirNefasto</ref>(<ref refid="struct_node" kindref="compound">Node</ref><sp/>**aux,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linha,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>coluna)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="struct_node" kindref="compound">Node</ref><sp/>*n<sp/>=<sp/>*aux;<sp/>n<sp/>!=<sp/>NULL;<sp/>n<sp/>=<sp/>n-&gt;next)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n-&gt;linha<sp/>==<sp/>linha<sp/>&amp;&amp;<sp/>n-&gt;coluna<sp/>==<sp/>coluna)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_node" kindref="compound">Node</ref><sp/>*novo<sp/>=<sp/>(<ref refid="struct_node" kindref="compound">Node</ref><sp/>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_node" kindref="compound">Node</ref>));</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>novo-&gt;linha<sp/>=<sp/>linha;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>novo-&gt;coluna<sp/>=<sp/>coluna;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>novo-&gt;next<sp/>=<sp/>*aux;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>*aux<sp/>=<sp/>novo;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="matriz_8c_1aba3864945dc2745df349ff8d16243f54" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="matriz_8c_1aba3864945dc2745df349ff8d16243f54" kindref="member">exibirMatriz</ref>(<ref refid="struct_antena" kindref="compound">Antena</ref><sp/>*listaAntenas,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linhas,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colunas)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>matriz[100][100];<sp/></highlight><highlight class="comment">//<sp/>Máximo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inicializar<sp/>matriz<sp/>com<sp/>&apos;.&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>linhas;<sp/>i++)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>colunas;<sp/>j++)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matriz[i][j]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Antenas<sp/>na<sp/>matriz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="struct_antena" kindref="compound">Antena</ref><sp/>*a<sp/>=<sp/>listaAntenas;<sp/>a<sp/>!=<sp/>NULL;<sp/>a<sp/>=<sp/>a-&gt;next)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matriz[a-&gt;linha][a-&gt;coluna]<sp/>=<sp/>a-&gt;freq;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Gerar<sp/>efeitos<sp/>nefastos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="matriz_8c_1a5ea6087f0b529841e75090f478056e67" kindref="member">gerarEfeitosNefastos</ref>(listaAntenas,<sp/>matriz,<sp/>linhas,<sp/>colunas);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Exibir<sp/>matriz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//setlocale(LC_ALL,<sp/>&quot;C&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\nMatriz:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>linhas;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>colunas;<sp/>j++)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%c&quot;</highlight><highlight class="normal">,<sp/>matriz[i][j]);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Listar<sp/>antenas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\nAntenas:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="struct_antena" kindref="compound">Antena</ref><sp/>*a<sp/>=<sp/>listaAntenas;<sp/>a<sp/>!=<sp/>NULL;<sp/>a<sp/>=<sp/>a-&gt;next)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Frequencia:<sp/>%c<sp/>|<sp/>Linha:<sp/>%d<sp/>|<sp/>Coluna:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>a-&gt;freq,<sp/>a-&gt;linha<sp/>+<sp/>1,<sp/>a-&gt;coluna<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Listar<sp/>efeitos<sp/>nefastos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\nEfeitos<sp/>nefastos:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>linhas;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>colunas;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(matriz[i][j]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Efeito\t\t|<sp/>Linha:<sp/>%d\t|<sp/>Coluna:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>i<sp/>+<sp/>1,<sp/>j<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="matriz_8c_1a5ea6087f0b529841e75090f478056e67" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="matriz_8c_1a5ea6087f0b529841e75090f478056e67" kindref="member">gerarEfeitosNefastos</ref>(<ref refid="struct_antena" kindref="compound">Antena</ref><sp/>*listaAntenas,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>matriz[][100],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linhas,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colunas)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="struct_antena" kindref="compound">Antena</ref><sp/>*a1<sp/>=<sp/>listaAntenas;<sp/>a1<sp/>!=<sp/>NULL;<sp/>a1<sp/>=<sp/>a1-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="struct_antena" kindref="compound">Antena</ref><sp/>*a2<sp/>=<sp/>a1-&gt;next;<sp/>a2<sp/>!=<sp/>NULL;<sp/>a2<sp/>=<sp/>a2-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a1-&gt;freq<sp/>==<sp/>a2-&gt;freq)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dx<sp/>=<sp/>a2-&gt;linha<sp/>-<sp/>a1-&gt;linha;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dy<sp/>=<sp/>a2-&gt;coluna<sp/>-<sp/>a1-&gt;coluna;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Geração<sp/>antes<sp/>da<sp/>primeira<sp/>antena</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linhaAntes<sp/>=<sp/>a1-&gt;linha<sp/>-<sp/>dx;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colunaAntes<sp/>=<sp/>a1-&gt;coluna<sp/>-<sp/>dy;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(linhaAntes<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>linhaAntes<sp/>&lt;<sp/>linhas<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colunaAntes<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>colunaAntes<sp/>&lt;<sp/>colunas)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matriz[linhaAntes][colunaAntes]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Geração<sp/>depois<sp/>da<sp/>segunda<sp/>antena</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linhaDepois<sp/>=<sp/>a2-&gt;linha<sp/>+<sp/>dx;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colunaDepois<sp/>=<sp/>a2-&gt;coluna<sp/>+<sp/>dy;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(linhaDepois<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>linhaDepois<sp/>&lt;<sp/>linhas<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colunaDepois<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>colunaDepois<sp/>&lt;<sp/>colunas)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matriz[linhaDepois][colunaDepois]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="matriz_8c_1ae03a71ace65214ff61d91e0338498fc2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="matriz_8c_1ae03a71ace65214ff61d91e0338498fc2" kindref="member">carregarMatrizDoFicheiro</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*nomeFicheiro,<sp/><ref refid="struct_antena" kindref="compound">Antena</ref><sp/>**aux,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*linhas,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*colunas)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*file<sp/>=<sp/>fopen(nomeFicheiro,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Erro<sp/>ao<sp/>abrir<sp/>ficheiro&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>linha[256];</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>maxCol<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(fgets(linha,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(linha),<sp/>file))<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>linha[j]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>linha[j]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(linha[j]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="antena_8c_1acc0269270f879978a2b329a200244697" kindref="member">inserirAntena</ref>(aux,<sp/>linha[j],<sp/>i,<sp/>j);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&gt;<sp/>maxCol)<sp/>maxCol<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>*linhas<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>*colunas<sp/>=<sp/>maxCol;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="matriz_8c_1a37b39a41a7b261b151581be51bc1dd2b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="matriz_8c_1a37b39a41a7b261b151581be51bc1dd2b" kindref="member">listarNefastos</ref>(<ref refid="struct_node" kindref="compound">Node</ref><sp/>*aux)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//setlocale(LC_ALL,<sp/>&quot;C&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%-10s<sp/>%-10s\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Linha&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Coluna&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%-10s<sp/>%-10s\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;-----&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;------&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>aux;<sp/>aux<sp/>=<sp/>aux-&gt;next)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%-10d<sp/>%-10d\n&quot;</highlight><highlight class="normal">,<sp/>aux-&gt;linha,<sp/>aux-&gt;coluna);</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="matriz.c"/>
  </compounddef>
</doxygen>
